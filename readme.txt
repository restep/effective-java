1.考虑用静态工厂方法代替构造器
2.遇到多个构造器参数时要考虑用构建器
3.用私有构造器或者枚举类型强化Singleton属性
4.通过私有构造器强化不可实例化的能力
5.避免创建不必要的对象
6.消除过期的对象引用
7.避免使用终结方法(finalizer)
8.覆盖equals时请遵守通用约定
9.覆盖equals时总要覆盖hashCode
10.始终要覆盖toString
11.谨慎地覆盖clone
12.考虑实现Comparable接口
13.使类和成员的可访问性最小化
14.在公有方法中使用访问方法而非公有域
15.使可变性最小化
16.复合优先与继承
17.要么为继承而设计 并提供文档说明 要么就要禁止继承
18.接口优于抽象类
19.接口只用于定义类型 常量接口模式是对接口的不良使用
20.类层次优于标签类
21.用函数对象表示策略
22.优先考虑静态成员类
